
# In this study, we generated a pangenome with 8 novel MAGs of Granulosicoccus sp. that we assembled, including 6 of high quality (>90% completion),
# along with two publicly available Granulosicoccus genomes. This code details the pangenome assembly, including importing the external genomes into anvio:

##############################################################

## Step 1: we downloaded two external Granulosicoccus genomes from NCBI (the only two Granulosicoccus genomes available at the time):
## This is the complete isolate genome of Granulosicoccus antarcticus type strain IMCC3135 (Kang et al. 2018): https://www.ncbi.nlm.nih.gov/assembly/GCF_002215215.1
## This one is a MAG of Granulosicoccus isolated from a bottlenose dolphin’s mouth (Dudek et al. 2017): https://www.ncbi.nlm.nih.gov/assembly/GCA_002746645.1

## First, reformat the downloaded fasta files using anvio:
anvi-script-reformat-fasta --simplify-names Granulosicoccus_antarcticus_genomic.fna -o Granulosicoccus_antarcticus.fasta
anvi-script-reformat-fasta --simplify-names Granulosicoccus_sp002746645_genomic.fna -o Granulosicoccus_sp002746645.fasta

## Generate contigs databases with fasta files:
## Note: before doing this, I had to edit the .fasta file decline (>name) to remove spaces, etc.
anvi-gen-contigs-database -f Granulosicoccus_antarcticus.fasta -n Granulosicoccus_antarcticus
anvi-gen-contigs-database -f Granulosicoccus_sp002746645.fasta -n Granulosicoccus_sp002746645

## Run hmms on new contigs databases:
anvi-run-hmms -c Pangenome_new/CONTIGS_Granulosicoccus_antarcticus.db --just-do-it
anvi-run-hmms -c Pangenome_new/CONTIGS_Granulosicoccus_sp002746645.db --just-do-it

## Annotate new contigs databases with NCBI COGs, Pfams and KEGG / KOfams:
## Run cogs:
anvi-run-ncbi-cogs -c /project2/cpfister/nereoblade/emily_assemblies/11_PANGENOME/Pangenome_new/CONTIGS_Granulosicoccus_sp002746645.db -T 8
anvi-run-ncbi-cogs -c /project2/cpfister/nereoblade/emily_assemblies/11_PANGENOME/Pangenome_new/CONTIGS_Granulosicoccus_antarcticus.db -T 8

## Run pfams:
anvi-run-pfams -c /project2/cpfister/nereoblade/emily_assemblies/11_PANGENOME/Pangenome_new/CONTIGS_Granulosicoccus_sp002746645.db -T 8
anvi-run-pfams -c /project2/cpfister/nereoblade/emily_assemblies/11_PANGENOME/Pangenome_new/CONTIGS_Granulosicoccus_antarcticus.db -T 8

## Run kegg kofams:
anvi-run-kegg-kofams -c /project2/cpfister/nereoblade/emily_assemblies/11_PANGENOME/Pangenome_new/CONTIGS_Granulosicoccus_sp002746645.db -T 8
anvi-run-kegg-kofams -c /project2/cpfister/nereoblade/emily_assemblies/11_PANGENOME/Pangenome_new/CONTIGS_Granulosicoccus_antarcticus.db -T 8

##############################################################

## Step 2: Make a database of all 10 genomes using “anvi-gen-genomes-storage”:

## First, create the internal genomes file: Granulosicoccus_MAGs.txt (made in excel, saved as .txt tab format)
## Second, create the external genomes file: Granulosicoccus_external_genomes.txt (made in excel, saved as .txt)

## Now, generate “anvio genomes storage” using both internal (my MAGs) and external (imported Granulosicoccus) genomes:
anvi-gen-genomes-storage -i Granulosicoccus_MAGs.txt -e Granulosicoccus_external_genomes.txt --gene-caller prodigal -o ALL-GRANULO-GENOMES.db

##############################################################

## Step 3: Generate the pangenome using “anvi-pan-genome”, which uses NCBI’s BLAST to quantify sequence similarity within and between genomes:

## Note: we used a minbit set to 0.5 and mcl-inflation set to 10
anvi-pan-genome -g ALL-GRANULO-GENOMES.db --project-name "Granulosicoccus_pangenome" --output-dir /Pangenome_new --minbit 0.5 --mcl-inflation 10 --use-ncbi-blast

## When this finishes, the new pangenome should be ready to view!

##############################################################

## Step 4: Use anvi’o to analyze and visualize the pangenome using “anvi-display-pan”: 
anvi-display-pan -p Pangenome_new/Granulosicoccus_pangenome-PAN.db -g ALL-GRANULO-GENOMES.db -I your_ip_address (*use to load interactive session if working on a server)

##############################################################

## Step 5: To obtain functional gene annotations and amino acid sequences from all genes within each Granulosicoccus genome, we used “anvi-summarize”: 

## You can summarize a pangenome collection using the program anvi-summarize, but first you need a bin collection to summarize:
anvi-script-add-default-collection -p Pangenome_new/Granulosicoccus_pangenome-PAN.db -b all_clusters -C default

## Create a summary of the pangenome clusters
anvi-summarize -p Pangenome_new/Granulosicoccus_pangenome-PAN.db -g ALL-GRANULO-GENOMES.db -C default -o Pangenome_new/Granulosicoccus_pangenome_summary

##############################################################

## Step 6: To search for KEGG metabolic pathways present in the pangenome, we used “anvi-estimate-metabolism”:

## Estimate metabolism for all Granulosicoccus MAGs
anvi-estimate-metabolism -i Granulosicoccus_MAGs.txt -O Pangenome_new/Granulosicoccus

##############################################################

## Step 7: To compare the average nucleotide identity (ANI) among Granulosicoccus genomes, we used “anvi-compute-genome-similarity” with PyANI (Pritchard et al. 2016):

anvi-compute-genome-similarity -i Granulosicoccus_MAGs.txt -e Granulosicoccus_external_genomes.txt --program pyANI --output-dir Pangenome_new//ANI --num-threads 6

##############################################################
