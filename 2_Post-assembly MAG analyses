This is the second script file, focused on analysis of MAGs after sequence quality control, contig assembly and metagenomic binning

##############################################################

## Refresher: Tips for using anvi-interactive while working on a remote server:

## First, look up your computer’s IP address (it will print the # in your terminal):
/sbin/ip route get 8.8.8.8 | awk '{print $NF;exit}'
## it will print something like this: 141.135.122.69

## Now, use anvi-interactive, but you need to include your computer’s IP address with the -I option. For example:
anvi-interactive -p 06_NEW_MERGED/2018/PROFILE.db -c 03_CONTIGS/g4-contigs.db -I 141.135.122.69

## Then go to a browser and type: http://your_IP_address:8080/

##############################################################

Step 1: Curation of a non-redundant MAG dataset

## In order to identify highly similar MAGs and pick representative genomes out of the redundant MAGs, the command “anvi-dereplicate-genomes”
was used to dereplicate the final MAG collection at 99% average nucleotide identity (ANI) using PyANI (Pritchard et al. 2016). 

## Note: It is important to dereplicate your genomes, becuase if you have two highly similar genomes, they will compete with each other to recruit reads from your metagenomes,
so any of your read recruitment-based analyses will have reads split between the two nearly identical genomes

## In this study, all MAGS were dereplicated at 99% average nucleotide identity (ANI) using the following command with --similarity-threshold set to 0.99
## Note that anvi'o uses 'PyANI' by Pritchard et al. (DOI: 10.1039/C5AY02550H) to compute ANI between genomes

anvi-dereplicate-genomes -i MAGs_final_internal_genomes.txt -o Dereplicated_MAGs/ANI_99 --program pyANI --similarity-threshold 0.99 --representative-method Qscore
-T 4 --log-file Dereplicated_MAGs/ANI_99/anvi_derep.log

## At a similarity threshold of 99%:
Number of redundant genomes ..................: 13                              
Final number of dereplicated genomes .........: 66

##############################################################

Step 2: Taxonomy assignment of MAGs using the Genome Taxonomy Database

## Taxonomy was assigned to each MAG using GTDB-Tk (v1.3.0; Chaumeil et al. 2019) outside of anvio, which uses a set of 120 concatenated bacterial gene markers to place MAGs
in a reference tree based on the Genome Taxonomy Database (release95, Parks et al. 2020), using both FastANI (Jain et al. 2018) and pplacer (Matsen et al. 2010).

## First, to generate contigs.fasta files for GTDB-Tk classification, MAGs were exported from anvio using anvi-summarize to get MAGs into FASTA format:
## See: http://merenlab.org/2016/06/22/anvio-tutorial-v2/#anvi-summarize
anvi-summarize -p 06_NEW_MERGED/g1/PROFILE.db -c 03_CONTIGS/g1-contigs.db -C MAGs_final -o 10_BINNING_SUMMARY/g1_MAGs_final

anvi-summarize will give you all the FASTA files for your bin. You will find them under under:
YOUR_SUMMARY/bin_by_bin/*/*.fa

## Before running GTDB-Tk, you will need to install the program (it is not integrated into anvio currently) & download the bacterial genome databases
See: https://ecogenomics.github.io/GTDBTk/installing/index.html

## I created a new folder called “genome_taxonomy_database” and used “wget” to install the databases:
wget https://data.ace.uq.edu.au/public/gtdb/data/releases/release95/95.0/auxillary_files/gtdbtk_r95_data.tar.gz
tar xvzf gtdbtk_r95_data.tar.gz

## Finally, I used this code to set the path. Note that you have to set the path every time you run the software:
export GTDBTK_DATA_PATH=/project2/cpfister/genome_taxonomy_database/release95/

## I followed the GTDB-Tk classify workflow here:
https://ecogenomics.github.io/GTDBTk/commands/classify_wf.html

## Running GTDB-Tk for assignment of metagenome assembled genome (MAG) taxonomy using GTDB-Tk version 1.3.0
## Note: If you are running on a server, you will likely need a very high memory allocation (250G if possible) and a long running time (~2+ hours)
## Use the flag -x to specify the file format as .fa

# Set the path to the reference genome database
export GTDBTK_DATA_PATH=/project2/cpfister/genome_taxonomy_database/release95/

## Submit the classify code (I used an sbatch script on a remote server)
gtdbtk classify_wf --batchfile /project2/cpfister/nereoblade/emily_assemblies/Nereo_MAG_paths_2.txt
--out_dir /project2/cpfister/nereoblade/emily_assemblies/13_GTDB_classify/classify_wf_output -x fa --force --debug

### Output: The two main files output are the summary file (gtdbtk.bac120.summary.tsv) and the reference tree containing those genomes (gtdbtk.bac120.classify.tree)

##############################################################




##############################################################

Step X: Annotate contigs databases and estimate functional gene content and metabolic pathways contained in each MAG

## Downloads and organizes a local copy of the KOfam / KEGG database for use in function annotation
anvi-setup-kegg-kofams

## Downloads and organizes a local copy of NCBI’s COGs database for use in function annotation
anvi-setup-ncbi-cogs --num-threads 5

## Downloads and organizes a local copy of EBI’s Pfam database for use in function annotation
anvi-setup-pfams

## Run KEGG kOfam annotation for each contigs database
anvi-run-kegg-kofams -c contigs.db --num-threads 6

## Run Pfam annotation for each contigs database
anvi-run-pfams -c contigs.db --num-threads 6

## Run COG annotation for each contigs database
anvi-run-ncbi-cogs -c contigs.db --num-threads 6

## Now that your contigs databases are annotated with all 3 gene databases, look at functions using "anvi-export-functions":
anvi-export-functions -c contigs.db -o All-functions.txt

## Run anvi-estimate-metabolism 
## Note: If you also provide a profile database and a collection name, anvi'o will estimate metabolism separately for each MAG in your collection:
anvi-estimate-metabolism -c contigs.db -p profile.db -C Final_MAGs -O Estimated_metabolisms 

##############################################################


## Use IQTREE (outside of anvio, on my personal computer) to make a tree of the final dereplicated MAGS:
## environment location: /Users/brookeweigel/miniconda3/envs/iqtree

## To activate this environment, use: conda activate iqtree
## To deactivate an active environment, use: conda deactivate

## Run IQtree on concatenated alignment:
iqtree -s gtdbtk.bac120.user_msa.fasta -nt AUTO -alrt 1000 -bb 1000 -m MFP

## Note: Best-fit model = LG+F+R6 chosen according to BIC

## Send output .tree file from my computer to RCC:
scp /Users/brookeweigel/Documents/1_UChicagoPhD/2_Research/01_2020_METAGENOMES/METAGENOMES_Anvio_MAGs/MAG_Phylogeny/gtdbtk.bac120.user_msa.fasta.treefile brookeweigel@midway2.rcc.uchicago.edu:/project2/cpfister/nereoblade/emily_assemblies/16_FINAL_PROFILE

## Try to add GTDB-tree to the anvio profile figure:

## Check IP address
/sbin/ip route get 8.8.8.8 | awk '{print $NF;exit}'

## Load anvio
module load python
source activate anvio-7

## Try to add tree imported from IQ_tree result:
anvi-interactive -p 16_FINAL_PROFILE/PROFILE.db -c 15_FINAL_MAPPING/MAGs-CONTIGS.db -C Final_MAGs --tree 16_FINAL_PROFILE/gtdbtk.bac120.user_msa.fasta.treefile -I 128.135.112.69 -P 8333

Additional Tree ..............................: 'gtdbtk.bac120.user_msa.fasta:unknown:unknown' has been added to available trees.               
Additional Tree ..............................: Splits will be organized based on 'gtdbtk.bac120.user_msa.fasta:unknown:unknown'.

http://128.135.112.69:8333/

## Select the ‘gtdbtk.bac120.user_msa.fasta’ from the ‘items order’ box in the ‘Main Settings’ tab.

## NOTE: To re-root the tree, command + right click on any branch!


##############################################################



Last step: Making the final figures:


We visualized the presence-absence of functional genes across MAGs with heatmaps generated using “anvi-interactive,”
where the phylogeny of MAGs and python-generated functional gene tables were imported as additional layers.


## FINAL figure with detection of MAGs across samples:
anvi-interactive -p 16_FINAL_PROFILE/PROFILE.db -c 15_FINAL_MAPPING/MAGs-CONTIGS.db -C Final_MAGs_2 --tree 16_FINAL_PROFILE/gtdbtk.bac120.user_msa.fasta.treefile -A 16_FINAL_PROFILE/misc-data-items.txt -I 128.135.112.69 -P 8333

## Saved state as “MAG_detection_across_samples_0.70”
## For detection, set min to 0.70 and max to 1.0 to be more conservative…

## To get quantitative abundance and detection values of MAGs across samples: 
anvi-summarize on the final MAG collection, in the folder "bins_across_samples"
## Look for files "abundance.txt" and "mean_coverage.txt"

## FINAL DOM TRANSPORTER GENE FIGURE:
anvi-interactive -p 16_FINAL_PROFILE/PROFILE.db -c 15_FINAL_MAPPING/MAGs-CONTIGS.db -C Final_MAGs --tree 16_FINAL_PROFILE/gtdbtk.bac120.user_msa.fasta.treefile -A 16_FINAL_PROFILE/misc_table_carbon.txt -I 128.135.112.68 -P 8333

http://128.135.112.68:8333/

## Load state = DOM_uptake_genes


## Making nitrogen metabolism figure: misc_table_nitrogen.txt

## FINAL NITROGEN METABOLISM GENE FIGURE:
anvi-interactive -p 16_FINAL_PROFILE/PROFILE.db -c 15_FINAL_MAPPING/MAGs-CONTIGS.db -C Final_MAGs --tree 16_FINAL_PROFILE/gtdbtk.bac120.user_msa.fasta.treefile -A 16_FINAL_PROFILE/misc_table_nitrogen.txt -I 128.135.112.69 -P 8333

http://128.135.112.69:8333/

## Load state = nitrogen_metabolism_genes

## Still need to re-root tree at Proteobacteria
## Still need to change color back to black & white… boo :(

## Highlight all N metabolism taxa, click “shade begins from branch” to highlight on phylogeny 


##############################################################

